// Script para sincronizar usu√°rio espec√≠fico para produ√ß√£o
import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o local
const localSupabase = createClient(
  'http://127.0.0.1:54321',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0'
);

// Configura√ß√£o produ√ß√£o (apenas para service role - N√ÉO commitar)
const prodSupabase = createClient(
  'https://tfkchwuphjaauyfqptbk.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRma2Nod3VwaGphYXV5ZnFwdGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzQyMDMsImV4cCI6MjA2MDMxMDIwM30.5hwAMrI2l_1L-DNvgCP3sYyzvxfajzerORY8AnUIZac'
);

async function checkUserInProduction() {
  const email = 'leonhatori@gmail.com';
  
  console.log('üîç Verificando usu√°rio em produ√ß√£o...');
  
  try {
    // Tentar fazer login para verificar se o usu√°rio existe
    const { data, error } = await prodSupabase.auth.signInWithPassword({
      email: email,
      password: '123456' // senha padr√£o de teste
    });
    
    if (error) {
      console.log('‚ùå Erro ao fazer login:', error.message);
      
      if (error.message.includes('Invalid login credentials')) {
        console.log('üìß Usu√°rio pode n√£o existir ou senha pode estar incorreta');
        console.log('üí° Sugest√µes:');
        console.log('1. Verifique se o usu√°rio existe no dashboard do Supabase');
        console.log('2. Tente resetar a senha do usu√°rio');
        console.log('3. Verifique se o email est√° confirmado');
      }
      
      if (error.message.includes('rate limit')) {
        console.log('‚è∞ Rate limit atingido - aguarde alguns minutos');
      }
    } else {
      console.log('‚úÖ Login bem-sucedido!');
      console.log('üë§ Usu√°rio:', data.user?.email);
      
      // Logout imediatamente
      await prodSupabase.auth.signOut();
    }
    
  } catch (err) {
    console.error('üö® Erro geral:', err);
  }
}

async function checkLocalUser() {
  const email = 'leonhatori@gmail.com';
  
  console.log('üè† Verificando usu√°rio local...');
  
  try {
    const { data, error } = await localSupabase.auth.signInWithPassword({
      email: email,
      password: '123456'
    });
    
    if (error) {
      console.log('‚ùå Erro local:', error.message);
    } else {
      console.log('‚úÖ Login local bem-sucedido!');
      console.log('üë§ Usu√°rio local:', data.user?.email);
      
      await localSupabase.auth.signOut();
    }
    
  } catch (err) {
    console.error('üö® Erro local:', err);
  }
}

async function main() {
  console.log('=== DIAGN√ìSTICO DE AUTENTICA√á√ÉO ===\n');
  
  await checkLocalUser();
  console.log('\n---\n');
  await checkUserInProduction();
  
  console.log('\n=== PR√ìXIMOS PASSOS ===');
  console.log('1. Acesse o dashboard do Supabase em produ√ß√£o');
  console.log('2. Verifique a aba Authentication > Users');
  console.log('3. Confirme se leonhatori@gmail.com existe');
  console.log('4. Verifique se o email est√° confirmado');
  console.log('5. Resete a senha se necess√°rio');
}

main();